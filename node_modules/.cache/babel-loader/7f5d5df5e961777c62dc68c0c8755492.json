{"remainingRequest":"/home/tal/development/vue-scaffold/node_modules/babel-loader/lib/index.js!/home/tal/development/vue-scaffold/node_modules/eslint-loader/index.js??ref--13-0!/home/tal/development/vue-scaffold/src/store/rooms.js","dependencies":[{"path":"/home/tal/development/vue-scaffold/src/store/rooms.js","mtime":1599516842796},{"path":"/home/tal/development/vue-scaffold/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tal/development/vue-scaffold/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/tal/development/vue-scaffold/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyogZXNsaW50LWRpc2FibGUgbm8tbmV3ICovCnZhciByb29tcyA9IHsKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiB7CiAgICByb29tczogW10KICB9LAogIG11dGF0aW9uczogewogICAgU0VUX1JPT01TOiBmdW5jdGlvbiBTRVRfUk9PTVMoc3RhdGUsIGRhdGEpIHsKICAgICAgc3RhdGUucm9vbXMgPSBkYXRhOwogICAgfQogIH0sCiAgYWN0aW9uczogewogICAgc2V0Um9vbXM6IGZ1bmN0aW9uIHNldFJvb21zKF9yZWYsIHJvb21zKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgY29tbWl0KCJTRVRfUk9PTVMiLCByb29tcyk7CiAgICB9CiAgfSwKICBnZXR0ZXJzOiB7CiAgICByb29tTGlzdDogZnVuY3Rpb24gcm9vbUxpc3Qoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnJvb21zOwogICAgfQogIH0KfTsKZXhwb3J0IGRlZmF1bHQgcm9vbXM7"},{"version":3,"sources":["/home/tal/development/vue-scaffold/src/store/rooms.js"],"names":["rooms","namespaced","state","mutations","SET_ROOMS","data","actions","setRooms","commit","getters","roomList"],"mappings":"AACA;AAEA,IAAMA,KAAK,GAAG;AACVC,EAAAA,UAAU,EAAE,IADF;AAEVC,EAAAA,KAAK,EAAE;AACHF,IAAAA,KAAK,EAAE;AADJ,GAFG;AAKVG,EAAAA,SAAS,EAAE;AACPC,IAAAA,SADO,qBACGF,KADH,EACUG,IADV,EACgB;AACnBH,MAAAA,KAAK,CAACF,KAAN,GAAYK,IAAZ;AACH;AAHM,GALD;AAUVC,EAAAA,OAAO,EAAE;AACLC,IAAAA,QADK,0BACgBP,KADhB,EACuB;AAAA,UAAjBQ,MAAiB,QAAjBA,MAAiB;AACxBA,MAAAA,MAAM,CAAC,WAAD,EAAcR,KAAd,CAAN;AACH;AAHI,GAVC;AAgBVS,EAAAA,OAAO,EAAE;AACLC,IAAAA,QAAQ,EAAE,kBAAAR,KAAK;AAAA,aAAIA,KAAK,CAACF,KAAV;AAAA;AADV;AAhBC,CAAd;AAqBA,eAAeA,KAAf","sourcesContent":["\n/* eslint-disable no-new */\n\nconst rooms = {\n    namespaced: true,\n    state: {\n        rooms: []\n    },\n    mutations: {\n        SET_ROOMS(state, data) {\n            state.rooms=data;\n        }\n    },\n    actions: {\n        setRooms({ commit }, rooms) {\n            commit(\"SET_ROOMS\", rooms);\n        }\n\n    },\n    getters: {\n        roomList: state => state.rooms \n    }\n}\n\nexport default rooms"]}]}